/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -p resources_interface /home/szybet/kdesrc/frameworks/kactivities/src/common/dbus/org.kde.ActivityManager.Resources.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef RESOURCES_INTERFACE_H
#define RESOURCES_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.ActivityManager.Resources
 */
class OrgKdeActivityManagerResourcesInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.ActivityManager.Resources"; }

public:
    OrgKdeActivityManagerResourcesInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgKdeActivityManagerResourcesInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> RegisterResourceEvent(const QString &application, uint windowId, const QString &uri, uint event)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(application) << QVariant::fromValue(windowId) << QVariant::fromValue(uri) << QVariant::fromValue(event);
        return asyncCallWithArgumentList(QStringLiteral("RegisterResourceEvent"), argumentList);
    }

    inline QDBusPendingReply<> RegisterResourceMimetype(const QString &uri, const QString &mimetype)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(uri) << QVariant::fromValue(mimetype);
        return asyncCallWithArgumentList(QStringLiteral("RegisterResourceMimetype"), argumentList);
    }

    inline QDBusPendingReply<> RegisterResourceTitle(const QString &uri, const QString &title)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(uri) << QVariant::fromValue(title);
        return asyncCallWithArgumentList(QStringLiteral("RegisterResourceTitle"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace kde {
    namespace ActivityManager {
      typedef ::OrgKdeActivityManagerResourcesInterface Resources;
    }
  }
}
#endif
