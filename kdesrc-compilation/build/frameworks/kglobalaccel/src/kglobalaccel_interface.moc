/****************************************************************************
** Meta object code from reading C++ file 'kglobalaccel_interface.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include "kglobalaccel_interface.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#include <QtCore/QList>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'kglobalaccel_interface.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_OrgKdeKGlobalAccelInterface_t {
    QByteArrayData data[51];
    char stringdata0[938];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_OrgKdeKGlobalAccelInterface_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_OrgKdeKGlobalAccelInterface_t qt_meta_stringdata_OrgKdeKGlobalAccelInterface = {
    {
QT_MOC_LITERAL(0, 0, 27), // "OrgKdeKGlobalAccelInterface"
QT_MOC_LITERAL(1, 28, 22), // "yourShortcutGotChanged"
QT_MOC_LITERAL(2, 51, 0), // ""
QT_MOC_LITERAL(3, 52, 8), // "actionId"
QT_MOC_LITERAL(4, 61, 10), // "QList<int>"
QT_MOC_LITERAL(5, 72, 7), // "newKeys"
QT_MOC_LITERAL(6, 80, 20), // "yourShortcutsChanged"
QT_MOC_LITERAL(7, 101, 19), // "QList<QKeySequence>"
QT_MOC_LITERAL(8, 121, 6), // "action"
QT_MOC_LITERAL(9, 128, 30), // "QDBusPendingReply<QStringList>"
QT_MOC_LITERAL(10, 159, 3), // "key"
QT_MOC_LITERAL(11, 163, 10), // "actionList"
QT_MOC_LITERAL(12, 174, 29), // "activateGlobalShortcutContext"
QT_MOC_LITERAL(13, 204, 19), // "QDBusPendingReply<>"
QT_MOC_LITERAL(14, 224, 9), // "component"
QT_MOC_LITERAL(15, 234, 7), // "context"
QT_MOC_LITERAL(16, 242, 22), // "allActionsForComponent"
QT_MOC_LITERAL(17, 265, 38), // "QDBusPendingReply<QList<QStri..."
QT_MOC_LITERAL(18, 304, 13), // "allComponents"
QT_MOC_LITERAL(19, 318, 42), // "QDBusPendingReply<QList<QDBus..."
QT_MOC_LITERAL(20, 361, 17), // "allMainComponents"
QT_MOC_LITERAL(21, 379, 20), // "blockGlobalShortcuts"
QT_MOC_LITERAL(22, 400, 3), // "in0"
QT_MOC_LITERAL(23, 404, 15), // "defaultShortcut"
QT_MOC_LITERAL(24, 420, 30), // "QDBusPendingReply<QList<int> >"
QT_MOC_LITERAL(25, 451, 19), // "defaultShortcutKeys"
QT_MOC_LITERAL(26, 471, 39), // "QDBusPendingReply<QList<QKeyS..."
QT_MOC_LITERAL(27, 511, 10), // "doRegister"
QT_MOC_LITERAL(28, 522, 12), // "getComponent"
QT_MOC_LITERAL(29, 535, 34), // "QDBusPendingReply<QDBusObject..."
QT_MOC_LITERAL(30, 570, 15), // "componentUnique"
QT_MOC_LITERAL(31, 586, 23), // "getGlobalShortcutsByKey"
QT_MOC_LITERAL(32, 610, 46), // "QDBusPendingReply<QList<KGlob..."
QT_MOC_LITERAL(33, 657, 23), // "globalShortcutAvailable"
QT_MOC_LITERAL(34, 681, 23), // "QDBusPendingReply<bool>"
QT_MOC_LITERAL(35, 705, 20), // "globalShortcutsByKey"
QT_MOC_LITERAL(36, 726, 23), // "KGlobalAccel::MatchType"
QT_MOC_LITERAL(37, 750, 9), // "matchType"
QT_MOC_LITERAL(38, 760, 25), // "isGlobalShortcutAvailable"
QT_MOC_LITERAL(39, 786, 18), // "setForeignShortcut"
QT_MOC_LITERAL(40, 805, 4), // "keys"
QT_MOC_LITERAL(41, 810, 22), // "setForeignShortcutKeys"
QT_MOC_LITERAL(42, 833, 11), // "setInactive"
QT_MOC_LITERAL(43, 845, 11), // "setShortcut"
QT_MOC_LITERAL(44, 857, 5), // "flags"
QT_MOC_LITERAL(45, 863, 15), // "setShortcutKeys"
QT_MOC_LITERAL(46, 879, 8), // "shortcut"
QT_MOC_LITERAL(47, 888, 12), // "shortcutKeys"
QT_MOC_LITERAL(48, 901, 10), // "unRegister"
QT_MOC_LITERAL(49, 912, 10), // "unregister"
QT_MOC_LITERAL(50, 923, 14) // "shortcutUnique"

    },
    "OrgKdeKGlobalAccelInterface\0"
    "yourShortcutGotChanged\0\0actionId\0"
    "QList<int>\0newKeys\0yourShortcutsChanged\0"
    "QList<QKeySequence>\0action\0"
    "QDBusPendingReply<QStringList>\0key\0"
    "actionList\0activateGlobalShortcutContext\0"
    "QDBusPendingReply<>\0component\0context\0"
    "allActionsForComponent\0"
    "QDBusPendingReply<QList<QStringList> >\0"
    "allComponents\0QDBusPendingReply<QList<QDBusObjectPath> >\0"
    "allMainComponents\0blockGlobalShortcuts\0"
    "in0\0defaultShortcut\0QDBusPendingReply<QList<int> >\0"
    "defaultShortcutKeys\0"
    "QDBusPendingReply<QList<QKeySequence> >\0"
    "doRegister\0getComponent\0"
    "QDBusPendingReply<QDBusObjectPath>\0"
    "componentUnique\0getGlobalShortcutsByKey\0"
    "QDBusPendingReply<QList<KGlobalShortcutInfo> >\0"
    "globalShortcutAvailable\0QDBusPendingReply<bool>\0"
    "globalShortcutsByKey\0KGlobalAccel::MatchType\0"
    "matchType\0isGlobalShortcutAvailable\0"
    "setForeignShortcut\0keys\0setForeignShortcutKeys\0"
    "setInactive\0setShortcut\0flags\0"
    "setShortcutKeys\0shortcut\0shortcutKeys\0"
    "unRegister\0unregister\0shortcutUnique"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_OrgKdeKGlobalAccelInterface[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      26,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    2,  144,    2, 0x06 /* Public */,
       6,    2,  149,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       8,    1,  154,    2, 0x0a /* Public */,
      11,    1,  157,    2, 0x0a /* Public */,
      12,    2,  160,    2, 0x0a /* Public */,
      16,    1,  165,    2, 0x0a /* Public */,
      18,    0,  168,    2, 0x0a /* Public */,
      20,    0,  169,    2, 0x0a /* Public */,
      21,    1,  170,    2, 0x0a /* Public */,
      23,    1,  173,    2, 0x0a /* Public */,
      25,    1,  176,    2, 0x0a /* Public */,
      27,    1,  179,    2, 0x0a /* Public */,
      28,    1,  182,    2, 0x0a /* Public */,
      31,    1,  185,    2, 0x0a /* Public */,
      33,    2,  188,    2, 0x0a /* Public */,
      35,    2,  193,    2, 0x0a /* Public */,
      38,    2,  198,    2, 0x0a /* Public */,
      39,    2,  203,    2, 0x0a /* Public */,
      41,    2,  208,    2, 0x0a /* Public */,
      42,    1,  213,    2, 0x0a /* Public */,
      43,    3,  216,    2, 0x0a /* Public */,
      45,    3,  223,    2, 0x0a /* Public */,
      46,    1,  230,    2, 0x0a /* Public */,
      47,    1,  233,    2, 0x0a /* Public */,
      48,    1,  236,    2, 0x0a /* Public */,
      49,    2,  239,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::QStringList, 0x80000000 | 4,    3,    5,
    QMetaType::Void, QMetaType::QStringList, 0x80000000 | 7,    3,    5,

 // slots: parameters
    0x80000000 | 9, QMetaType::Int,   10,
    0x80000000 | 9, QMetaType::QKeySequence,   10,
    0x80000000 | 13, QMetaType::QString, QMetaType::QString,   14,   15,
    0x80000000 | 17, QMetaType::QStringList,    3,
    0x80000000 | 19,
    0x80000000 | 17,
    0x80000000 | 13, QMetaType::Bool,   22,
    0x80000000 | 24, QMetaType::QStringList,    3,
    0x80000000 | 26, QMetaType::QStringList,    3,
    0x80000000 | 13, QMetaType::QStringList,    3,
    0x80000000 | 29, QMetaType::QString,   30,
    0x80000000 | 32, QMetaType::Int,   10,
    0x80000000 | 34, QMetaType::QKeySequence, QMetaType::QString,   10,   14,
    0x80000000 | 32, QMetaType::QKeySequence, 0x80000000 | 36,   10,   37,
    0x80000000 | 34, QMetaType::Int, QMetaType::QString,   10,   14,
    0x80000000 | 13, QMetaType::QStringList, 0x80000000 | 4,    3,   40,
    0x80000000 | 13, QMetaType::QStringList, 0x80000000 | 7,    3,   40,
    0x80000000 | 13, QMetaType::QStringList,    3,
    0x80000000 | 24, QMetaType::QStringList, 0x80000000 | 4, QMetaType::UInt,    3,   40,   44,
    0x80000000 | 26, QMetaType::QStringList, 0x80000000 | 7, QMetaType::UInt,    3,   40,   44,
    0x80000000 | 24, QMetaType::QStringList,    3,
    0x80000000 | 26, QMetaType::QStringList,    3,
    0x80000000 | 13, QMetaType::QStringList,    3,
    0x80000000 | 34, QMetaType::QString, QMetaType::QString,   30,   50,

       0        // eod
};

void OrgKdeKGlobalAccelInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<OrgKdeKGlobalAccelInterface *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->yourShortcutGotChanged((*reinterpret_cast< const QStringList(*)>(_a[1])),(*reinterpret_cast< const QList<int>(*)>(_a[2]))); break;
        case 1: _t->yourShortcutsChanged((*reinterpret_cast< const QStringList(*)>(_a[1])),(*reinterpret_cast< const QList<QKeySequence>(*)>(_a[2]))); break;
        case 2: { QDBusPendingReply<QStringList> _r = _t->action((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QStringList>*>(_a[0]) = std::move(_r); }  break;
        case 3: { QDBusPendingReply<QStringList> _r = _t->actionList((*reinterpret_cast< const QKeySequence(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QStringList>*>(_a[0]) = std::move(_r); }  break;
        case 4: { QDBusPendingReply<> _r = _t->activateGlobalShortcutContext((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 5: { QDBusPendingReply<QList<QStringList> > _r = _t->allActionsForComponent((*reinterpret_cast< const QStringList(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<QStringList> >*>(_a[0]) = std::move(_r); }  break;
        case 6: { QDBusPendingReply<QList<QDBusObjectPath> > _r = _t->allComponents();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<QDBusObjectPath> >*>(_a[0]) = std::move(_r); }  break;
        case 7: { QDBusPendingReply<QList<QStringList> > _r = _t->allMainComponents();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<QStringList> >*>(_a[0]) = std::move(_r); }  break;
        case 8: { QDBusPendingReply<> _r = _t->blockGlobalShortcuts((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 9: { QDBusPendingReply<QList<int> > _r = _t->defaultShortcut((*reinterpret_cast< const QStringList(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<int> >*>(_a[0]) = std::move(_r); }  break;
        case 10: { QDBusPendingReply<QList<QKeySequence> > _r = _t->defaultShortcutKeys((*reinterpret_cast< const QStringList(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<QKeySequence> >*>(_a[0]) = std::move(_r); }  break;
        case 11: { QDBusPendingReply<> _r = _t->doRegister((*reinterpret_cast< const QStringList(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 12: { QDBusPendingReply<QDBusObjectPath> _r = _t->getComponent((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QDBusObjectPath>*>(_a[0]) = std::move(_r); }  break;
        case 13: { QDBusPendingReply<QList<KGlobalShortcutInfo> > _r = _t->getGlobalShortcutsByKey((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<KGlobalShortcutInfo> >*>(_a[0]) = std::move(_r); }  break;
        case 14: { QDBusPendingReply<bool> _r = _t->globalShortcutAvailable((*reinterpret_cast< const QKeySequence(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 15: { QDBusPendingReply<QList<KGlobalShortcutInfo> > _r = _t->globalShortcutsByKey((*reinterpret_cast< const QKeySequence(*)>(_a[1])),(*reinterpret_cast< KGlobalAccel::MatchType(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<KGlobalShortcutInfo> >*>(_a[0]) = std::move(_r); }  break;
        case 16: { QDBusPendingReply<bool> _r = _t->isGlobalShortcutAvailable((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 17: { QDBusPendingReply<> _r = _t->setForeignShortcut((*reinterpret_cast< const QStringList(*)>(_a[1])),(*reinterpret_cast< const QList<int>(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 18: { QDBusPendingReply<> _r = _t->setForeignShortcutKeys((*reinterpret_cast< const QStringList(*)>(_a[1])),(*reinterpret_cast< const QList<QKeySequence>(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 19: { QDBusPendingReply<> _r = _t->setInactive((*reinterpret_cast< const QStringList(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 20: { QDBusPendingReply<QList<int> > _r = _t->setShortcut((*reinterpret_cast< const QStringList(*)>(_a[1])),(*reinterpret_cast< const QList<int>(*)>(_a[2])),(*reinterpret_cast< uint(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<int> >*>(_a[0]) = std::move(_r); }  break;
        case 21: { QDBusPendingReply<QList<QKeySequence> > _r = _t->setShortcutKeys((*reinterpret_cast< const QStringList(*)>(_a[1])),(*reinterpret_cast< const QList<QKeySequence>(*)>(_a[2])),(*reinterpret_cast< uint(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<QKeySequence> >*>(_a[0]) = std::move(_r); }  break;
        case 22: { QDBusPendingReply<QList<int> > _r = _t->shortcut((*reinterpret_cast< const QStringList(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<int> >*>(_a[0]) = std::move(_r); }  break;
        case 23: { QDBusPendingReply<QList<QKeySequence> > _r = _t->shortcutKeys((*reinterpret_cast< const QStringList(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QList<QKeySequence> >*>(_a[0]) = std::move(_r); }  break;
        case 24: { QDBusPendingReply<> _r = _t->unRegister((*reinterpret_cast< const QStringList(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 25: { QDBusPendingReply<bool> _r = _t->unregister((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 0:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QList<int> >(); break;
            }
            break;
        case 1:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QList<QKeySequence> >(); break;
            }
            break;
        case 17:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QList<int> >(); break;
            }
            break;
        case 18:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QList<QKeySequence> >(); break;
            }
            break;
        case 20:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QList<int> >(); break;
            }
            break;
        case 21:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QList<QKeySequence> >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (OrgKdeKGlobalAccelInterface::*)(const QStringList & , const QList<int> & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKGlobalAccelInterface::yourShortcutGotChanged)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (OrgKdeKGlobalAccelInterface::*)(const QStringList & , const QList<QKeySequence> & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKGlobalAccelInterface::yourShortcutsChanged)) {
                *result = 1;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject OrgKdeKGlobalAccelInterface::staticMetaObject = { {
    QMetaObject::SuperData::link<QDBusAbstractInterface::staticMetaObject>(),
    qt_meta_stringdata_OrgKdeKGlobalAccelInterface.data,
    qt_meta_data_OrgKdeKGlobalAccelInterface,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *OrgKdeKGlobalAccelInterface::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *OrgKdeKGlobalAccelInterface::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_OrgKdeKGlobalAccelInterface.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractInterface::qt_metacast(_clname);
}

int OrgKdeKGlobalAccelInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractInterface::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 26)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 26;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 26)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 26;
    }
    return _id;
}

// SIGNAL 0
void OrgKdeKGlobalAccelInterface::yourShortcutGotChanged(const QStringList & _t1, const QList<int> & _t2)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void OrgKdeKGlobalAccelInterface::yourShortcutsChanged(const QStringList & _t1, const QList<QKeySequence> & _t2)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
