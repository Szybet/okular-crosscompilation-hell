/****************************************************************************
** Meta object code from reading C++ file 'kmodifierkeyinfotest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'kmodifierkeyinfotest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_TestWidget_t {
    QByteArrayData data[15];
    char stringdata0[135];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestWidget_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestWidget_t qt_meta_stringdata_TestWidget = {
    {
QT_MOC_LITERAL(0, 0, 10), // "TestWidget"
QT_MOC_LITERAL(1, 11, 10), // "keyPressed"
QT_MOC_LITERAL(2, 22, 0), // ""
QT_MOC_LITERAL(3, 23, 7), // "Qt::Key"
QT_MOC_LITERAL(4, 31, 3), // "key"
QT_MOC_LITERAL(5, 35, 5), // "state"
QT_MOC_LITERAL(6, 41, 10), // "keyLatched"
QT_MOC_LITERAL(7, 52, 9), // "keyLocked"
QT_MOC_LITERAL(8, 62, 18), // "mouseButtonPressed"
QT_MOC_LITERAL(9, 81, 15), // "Qt::MouseButton"
QT_MOC_LITERAL(10, 97, 6), // "button"
QT_MOC_LITERAL(11, 104, 5), // "latch"
QT_MOC_LITERAL(12, 110, 4), // "lock"
QT_MOC_LITERAL(13, 115, 8), // "keyAdded"
QT_MOC_LITERAL(14, 124, 10) // "keyRemoved"

    },
    "TestWidget\0keyPressed\0\0Qt::Key\0key\0"
    "state\0keyLatched\0keyLocked\0"
    "mouseButtonPressed\0Qt::MouseButton\0"
    "button\0latch\0lock\0keyAdded\0keyRemoved"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestWidget[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       8,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    2,   54,    2, 0x09 /* Protected */,
       6,    2,   59,    2, 0x09 /* Protected */,
       7,    2,   64,    2, 0x09 /* Protected */,
       8,    2,   69,    2, 0x09 /* Protected */,
      11,    0,   74,    2, 0x09 /* Protected */,
      12,    0,   75,    2, 0x09 /* Protected */,
      13,    1,   76,    2, 0x09 /* Protected */,
      14,    1,   79,    2, 0x09 /* Protected */,

 // slots: parameters
    QMetaType::Void, 0x80000000 | 3, QMetaType::Bool,    4,    5,
    QMetaType::Void, 0x80000000 | 3, QMetaType::Bool,    4,    5,
    QMetaType::Void, 0x80000000 | 3, QMetaType::Bool,    4,    5,
    QMetaType::Void, 0x80000000 | 9, QMetaType::Bool,   10,    5,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 3,    2,
    QMetaType::Void, 0x80000000 | 3,    2,

       0        // eod
};

void TestWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<TestWidget *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->keyPressed((*reinterpret_cast< Qt::Key(*)>(_a[1])),(*reinterpret_cast< bool(*)>(_a[2]))); break;
        case 1: _t->keyLatched((*reinterpret_cast< Qt::Key(*)>(_a[1])),(*reinterpret_cast< bool(*)>(_a[2]))); break;
        case 2: _t->keyLocked((*reinterpret_cast< Qt::Key(*)>(_a[1])),(*reinterpret_cast< bool(*)>(_a[2]))); break;
        case 3: _t->mouseButtonPressed((*reinterpret_cast< Qt::MouseButton(*)>(_a[1])),(*reinterpret_cast< bool(*)>(_a[2]))); break;
        case 4: _t->latch(); break;
        case 5: _t->lock(); break;
        case 6: _t->keyAdded((*reinterpret_cast< Qt::Key(*)>(_a[1]))); break;
        case 7: _t->keyRemoved((*reinterpret_cast< Qt::Key(*)>(_a[1]))); break;
        default: ;
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject TestWidget::staticMetaObject = { {
    QMetaObject::SuperData::link<QWidget::staticMetaObject>(),
    qt_meta_stringdata_TestWidget.data,
    qt_meta_data_TestWidget,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *TestWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestWidget.stringdata0))
        return static_cast<void*>(this);
    return QWidget::qt_metacast(_clname);
}

int TestWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 8)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 8;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 8)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 8;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
