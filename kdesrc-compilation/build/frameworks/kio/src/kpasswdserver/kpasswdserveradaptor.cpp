/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a kpasswdserveradaptor -i kpasswdserver.h -l KPasswdServer /home/szybet/kdesrc/frameworks/kio/src/core/org.kde.KPasswdServer.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "kpasswdserveradaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KPasswdServerAdaptor
 */

KPasswdServerAdaptor::KPasswdServerAdaptor(KPasswdServer *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KPasswdServerAdaptor::~KPasswdServerAdaptor()
{
    // destructor
}

void KPasswdServerAdaptor::addAuthInfo(KIO::AuthInfo info, qlonglong windowId)
{
    // handle method call org.kde.KPasswdServer.addAuthInfo
    parent()->addAuthInfo(info, windowId);
}

void KPasswdServerAdaptor::addAuthInfo(const QByteArray &data, qlonglong windowId)
{
    // handle method call org.kde.KPasswdServer.addAuthInfo
    parent()->addAuthInfo(data, windowId);
}

QByteArray KPasswdServerAdaptor::checkAuthInfo(const QByteArray &data, qlonglong windowId, qlonglong usertime)
{
    // handle method call org.kde.KPasswdServer.checkAuthInfo
    return parent()->checkAuthInfo(data, windowId, usertime);
}

qlonglong KPasswdServerAdaptor::checkAuthInfoAsync(KIO::AuthInfo info, qlonglong windowId, qlonglong usertime)
{
    // handle method call org.kde.KPasswdServer.checkAuthInfoAsync
    return parent()->checkAuthInfoAsync(info, windowId, usertime);
}

QByteArray KPasswdServerAdaptor::queryAuthInfo(const QByteArray &data, const QString &errorMsg, qlonglong windowId, qlonglong seqNr, qlonglong usertime)
{
    // handle method call org.kde.KPasswdServer.queryAuthInfo
    return parent()->queryAuthInfo(data, errorMsg, windowId, seqNr, usertime);
}

qlonglong KPasswdServerAdaptor::queryAuthInfoAsync(KIO::AuthInfo info, const QString &errorMsg, qlonglong windowId, qlonglong seqNr, qlonglong usertime)
{
    // handle method call org.kde.KPasswdServer.queryAuthInfoAsync
    return parent()->queryAuthInfoAsync(info, errorMsg, windowId, seqNr, usertime);
}

void KPasswdServerAdaptor::removeAuthInfo(const QString &host, const QString &protocol, const QString &user)
{
    // handle method call org.kde.KPasswdServer.removeAuthInfo
    parent()->removeAuthInfo(host, protocol, user);
}


#include "kpasswdserveradaptor.moc"
