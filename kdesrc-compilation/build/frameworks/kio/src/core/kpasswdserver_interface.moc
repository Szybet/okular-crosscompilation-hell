/****************************************************************************
** Meta object code from reading C++ file 'kpasswdserver_interface.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include "kpasswdserver_interface.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'kpasswdserver_interface.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_OrgKdeKPasswdServerInterface_t {
    QByteArrayData data[24];
    char stringdata0[338];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_OrgKdeKPasswdServerInterface_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_OrgKdeKPasswdServerInterface_t qt_meta_stringdata_OrgKdeKPasswdServerInterface = {
    {
QT_MOC_LITERAL(0, 0, 28), // "OrgKdeKPasswdServerInterface"
QT_MOC_LITERAL(1, 29, 24), // "checkAuthInfoAsyncResult"
QT_MOC_LITERAL(2, 54, 0), // ""
QT_MOC_LITERAL(3, 55, 9), // "requestId"
QT_MOC_LITERAL(4, 65, 5), // "seqNr"
QT_MOC_LITERAL(5, 71, 13), // "KIO::AuthInfo"
QT_MOC_LITERAL(6, 85, 4), // "info"
QT_MOC_LITERAL(7, 90, 24), // "queryAuthInfoAsyncResult"
QT_MOC_LITERAL(8, 115, 11), // "addAuthInfo"
QT_MOC_LITERAL(9, 127, 19), // "QDBusPendingReply<>"
QT_MOC_LITERAL(10, 147, 8), // "windowId"
QT_MOC_LITERAL(11, 156, 4), // "data"
QT_MOC_LITERAL(12, 161, 13), // "checkAuthInfo"
QT_MOC_LITERAL(13, 175, 29), // "QDBusPendingReply<QByteArray>"
QT_MOC_LITERAL(14, 205, 8), // "usertime"
QT_MOC_LITERAL(15, 214, 18), // "checkAuthInfoAsync"
QT_MOC_LITERAL(16, 233, 28), // "QDBusPendingReply<qlonglong>"
QT_MOC_LITERAL(17, 262, 13), // "queryAuthInfo"
QT_MOC_LITERAL(18, 276, 8), // "errorMsg"
QT_MOC_LITERAL(19, 285, 18), // "queryAuthInfoAsync"
QT_MOC_LITERAL(20, 304, 14), // "removeAuthInfo"
QT_MOC_LITERAL(21, 319, 4), // "host"
QT_MOC_LITERAL(22, 324, 8), // "protocol"
QT_MOC_LITERAL(23, 333, 4) // "user"

    },
    "OrgKdeKPasswdServerInterface\0"
    "checkAuthInfoAsyncResult\0\0requestId\0"
    "seqNr\0KIO::AuthInfo\0info\0"
    "queryAuthInfoAsyncResult\0addAuthInfo\0"
    "QDBusPendingReply<>\0windowId\0data\0"
    "checkAuthInfo\0QDBusPendingReply<QByteArray>\0"
    "usertime\0checkAuthInfoAsync\0"
    "QDBusPendingReply<qlonglong>\0queryAuthInfo\0"
    "errorMsg\0queryAuthInfoAsync\0removeAuthInfo\0"
    "host\0protocol\0user"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_OrgKdeKPasswdServerInterface[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       9,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    3,   59,    2, 0x06 /* Public */,
       7,    3,   66,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       8,    2,   73,    2, 0x0a /* Public */,
       8,    2,   78,    2, 0x0a /* Public */,
      12,    3,   83,    2, 0x0a /* Public */,
      15,    3,   90,    2, 0x0a /* Public */,
      17,    5,   97,    2, 0x0a /* Public */,
      19,    5,  108,    2, 0x0a /* Public */,
      20,    3,  119,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::LongLong, QMetaType::LongLong, 0x80000000 | 5,    3,    4,    6,
    QMetaType::Void, QMetaType::LongLong, QMetaType::LongLong, 0x80000000 | 5,    3,    4,    6,

 // slots: parameters
    0x80000000 | 9, 0x80000000 | 5, QMetaType::LongLong,    6,   10,
    0x80000000 | 9, QMetaType::QByteArray, QMetaType::LongLong,   11,   10,
    0x80000000 | 13, QMetaType::QByteArray, QMetaType::LongLong, QMetaType::LongLong,   11,   10,   14,
    0x80000000 | 16, 0x80000000 | 5, QMetaType::LongLong, QMetaType::LongLong,    6,   10,   14,
    0x80000000 | 13, QMetaType::QByteArray, QMetaType::QString, QMetaType::LongLong, QMetaType::LongLong, QMetaType::LongLong,   11,   18,   10,    4,   14,
    0x80000000 | 16, 0x80000000 | 5, QMetaType::QString, QMetaType::LongLong, QMetaType::LongLong, QMetaType::LongLong,    6,   18,   10,    4,   14,
    0x80000000 | 9, QMetaType::QString, QMetaType::QString, QMetaType::QString,   21,   22,   23,

       0        // eod
};

void OrgKdeKPasswdServerInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<OrgKdeKPasswdServerInterface *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->checkAuthInfoAsyncResult((*reinterpret_cast< qlonglong(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])),(*reinterpret_cast< KIO::AuthInfo(*)>(_a[3]))); break;
        case 1: _t->queryAuthInfoAsyncResult((*reinterpret_cast< qlonglong(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])),(*reinterpret_cast< KIO::AuthInfo(*)>(_a[3]))); break;
        case 2: { QDBusPendingReply<> _r = _t->addAuthInfo((*reinterpret_cast< KIO::AuthInfo(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 3: { QDBusPendingReply<> _r = _t->addAuthInfo((*reinterpret_cast< const QByteArray(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 4: { QDBusPendingReply<QByteArray> _r = _t->checkAuthInfo((*reinterpret_cast< const QByteArray(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])),(*reinterpret_cast< qlonglong(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QByteArray>*>(_a[0]) = std::move(_r); }  break;
        case 5: { QDBusPendingReply<qlonglong> _r = _t->checkAuthInfoAsync((*reinterpret_cast< KIO::AuthInfo(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])),(*reinterpret_cast< qlonglong(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<qlonglong>*>(_a[0]) = std::move(_r); }  break;
        case 6: { QDBusPendingReply<QByteArray> _r = _t->queryAuthInfo((*reinterpret_cast< const QByteArray(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< qlonglong(*)>(_a[3])),(*reinterpret_cast< qlonglong(*)>(_a[4])),(*reinterpret_cast< qlonglong(*)>(_a[5])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QByteArray>*>(_a[0]) = std::move(_r); }  break;
        case 7: { QDBusPendingReply<qlonglong> _r = _t->queryAuthInfoAsync((*reinterpret_cast< KIO::AuthInfo(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< qlonglong(*)>(_a[3])),(*reinterpret_cast< qlonglong(*)>(_a[4])),(*reinterpret_cast< qlonglong(*)>(_a[5])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<qlonglong>*>(_a[0]) = std::move(_r); }  break;
        case 8: { QDBusPendingReply<> _r = _t->removeAuthInfo((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 0:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 2:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< KIO::AuthInfo >(); break;
            }
            break;
        case 1:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 2:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< KIO::AuthInfo >(); break;
            }
            break;
        case 2:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< KIO::AuthInfo >(); break;
            }
            break;
        case 5:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< KIO::AuthInfo >(); break;
            }
            break;
        case 7:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< KIO::AuthInfo >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (OrgKdeKPasswdServerInterface::*)(qlonglong , qlonglong , KIO::AuthInfo );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKPasswdServerInterface::checkAuthInfoAsyncResult)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (OrgKdeKPasswdServerInterface::*)(qlonglong , qlonglong , KIO::AuthInfo );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKPasswdServerInterface::queryAuthInfoAsyncResult)) {
                *result = 1;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject OrgKdeKPasswdServerInterface::staticMetaObject = { {
    QMetaObject::SuperData::link<QDBusAbstractInterface::staticMetaObject>(),
    qt_meta_stringdata_OrgKdeKPasswdServerInterface.data,
    qt_meta_data_OrgKdeKPasswdServerInterface,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *OrgKdeKPasswdServerInterface::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *OrgKdeKPasswdServerInterface::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_OrgKdeKPasswdServerInterface.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractInterface::qt_metacast(_clname);
}

int OrgKdeKPasswdServerInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractInterface::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    }
    return _id;
}

// SIGNAL 0
void OrgKdeKPasswdServerInterface::checkAuthInfoAsyncResult(qlonglong _t1, qlonglong _t2, KIO::AuthInfo _t3)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t3))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void OrgKdeKPasswdServerInterface::queryAuthInfoAsyncResult(qlonglong _t1, qlonglong _t2, KIO::AuthInfo _t3)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t3))) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
