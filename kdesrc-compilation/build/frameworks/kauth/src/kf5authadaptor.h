/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a kf5authadaptor -i backends/dbus/DBusHelperProxy.h -l KAuth::DBusHelperProxy /home/szybet/kdesrc/frameworks/kauth/src/backends/dbus/org.kde.kf5auth.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef KF5AUTHADAPTOR_H
#define KF5AUTHADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "backends/dbus/DBusHelperProxy.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.kde.kf5auth
 */
class Kf5authAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.kf5auth")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.kf5auth\">\n"
"    <method name=\"performAction\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"action\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"callerID\"/>\n"
"      <arg direction=\"in\" type=\"a{sv}\" name=\"details\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"arguments\"/>\n"
"      <arg direction=\"out\" type=\"ay\" name=\"r\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.In2\"/>\n"
"    </method>\n"
"    <method name=\"stopAction\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"action\"/>\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\"/>\n"
"    </method>\n"
"    <signal name=\"remoteSignal\">\n"
"      <arg type=\"i\" name=\"type\"/>\n"
"      <arg type=\"s\" name=\"action\"/>\n"
"      <arg type=\"ay\" name=\"blob\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    Kf5authAdaptor(KAuth::DBusHelperProxy *parent);
    virtual ~Kf5authAdaptor();

    inline KAuth::DBusHelperProxy *parent() const
    { return static_cast<KAuth::DBusHelperProxy *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QByteArray performAction(const QString &action, const QByteArray &callerID, const QVariantMap &details, const QByteArray &arguments);
    Q_NOREPLY void stopAction(const QString &action);
Q_SIGNALS: // SIGNALS
    void remoteSignal(int type, const QString &action, const QByteArray &blob);
};

#endif
