/****************************************************************************
** Meta object code from reading C++ file 'pgpunittest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'pgpunittest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_PGPPassphraseProvider_t {
    QByteArrayData data[6];
    char stringdata0[57];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_PGPPassphraseProvider_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_PGPPassphraseProvider_t qt_meta_stringdata_PGPPassphraseProvider = {
    {
QT_MOC_LITERAL(0, 0, 21), // "PGPPassphraseProvider"
QT_MOC_LITERAL(1, 22, 13), // "eh_eventReady"
QT_MOC_LITERAL(2, 36, 0), // ""
QT_MOC_LITERAL(3, 37, 2), // "id"
QT_MOC_LITERAL(4, 40, 10), // "QCA::Event"
QT_MOC_LITERAL(5, 51, 5) // "event"

    },
    "PGPPassphraseProvider\0eh_eventReady\0"
    "\0id\0QCA::Event\0event"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_PGPPassphraseProvider[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    2,   19,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void, QMetaType::Int, 0x80000000 | 4,    3,    5,

       0        // eod
};

void PGPPassphraseProvider::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<PGPPassphraseProvider *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->eh_eventReady((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QCA::Event(*)>(_a[2]))); break;
        default: ;
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject PGPPassphraseProvider::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_PGPPassphraseProvider.data,
    qt_meta_data_PGPPassphraseProvider,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *PGPPassphraseProvider::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *PGPPassphraseProvider::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_PGPPassphraseProvider.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int PGPPassphraseProvider::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_PGPPassphraseProviderThread_t {
    QByteArrayData data[1];
    char stringdata0[28];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_PGPPassphraseProviderThread_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_PGPPassphraseProviderThread_t qt_meta_stringdata_PGPPassphraseProviderThread = {
    {
QT_MOC_LITERAL(0, 0, 27) // "PGPPassphraseProviderThread"

    },
    "PGPPassphraseProviderThread"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_PGPPassphraseProviderThread[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void PGPPassphraseProviderThread::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

QT_INIT_METAOBJECT const QMetaObject PGPPassphraseProviderThread::staticMetaObject = { {
    QMetaObject::SuperData::link<QCA::SyncThread::staticMetaObject>(),
    qt_meta_stringdata_PGPPassphraseProviderThread.data,
    qt_meta_data_PGPPassphraseProviderThread,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *PGPPassphraseProviderThread::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *PGPPassphraseProviderThread::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_PGPPassphraseProviderThread.stringdata0))
        return static_cast<void*>(this);
    return QCA::SyncThread::qt_metacast(_clname);
}

int PGPPassphraseProviderThread::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QCA::SyncThread::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_PgpUnitTest_t {
    QByteArrayData data[10];
    char stringdata0[167];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_PgpUnitTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_PgpUnitTest_t qt_meta_stringdata_PgpUnitTest = {
    {
QT_MOC_LITERAL(0, 0, 11), // "PgpUnitTest"
QT_MOC_LITERAL(1, 12, 12), // "initTestCase"
QT_MOC_LITERAL(2, 25, 0), // ""
QT_MOC_LITERAL(3, 26, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 42, 11), // "testKeyRing"
QT_MOC_LITERAL(5, 54, 15), // "testMessageSign"
QT_MOC_LITERAL(6, 70, 13), // "testClearsign"
QT_MOC_LITERAL(7, 84, 16), // "testDetachedSign"
QT_MOC_LITERAL(8, 101, 32), // "testSignaturesWithExpiredSubkeys"
QT_MOC_LITERAL(9, 134, 32) // "testEncryptionWithExpiredSubkeys"

    },
    "PgpUnitTest\0initTestCase\0\0cleanupTestCase\0"
    "testKeyRing\0testMessageSign\0testClearsign\0"
    "testDetachedSign\0testSignaturesWithExpiredSubkeys\0"
    "testEncryptionWithExpiredSubkeys"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_PgpUnitTest[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       8,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   54,    2, 0x08 /* Private */,
       3,    0,   55,    2, 0x08 /* Private */,
       4,    0,   56,    2, 0x08 /* Private */,
       5,    0,   57,    2, 0x08 /* Private */,
       6,    0,   58,    2, 0x08 /* Private */,
       7,    0,   59,    2, 0x08 /* Private */,
       8,    0,   60,    2, 0x08 /* Private */,
       9,    0,   61,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void PgpUnitTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<PgpUnitTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->testKeyRing(); break;
        case 3: _t->testMessageSign(); break;
        case 4: _t->testClearsign(); break;
        case 5: _t->testDetachedSign(); break;
        case 6: _t->testSignaturesWithExpiredSubkeys(); break;
        case 7: _t->testEncryptionWithExpiredSubkeys(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

QT_INIT_METAOBJECT const QMetaObject PgpUnitTest::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_PgpUnitTest.data,
    qt_meta_data_PgpUnitTest,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *PgpUnitTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *PgpUnitTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_PgpUnitTest.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int PgpUnitTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 8)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 8;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 8)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 8;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
