/****************************************************************************
** Meta object code from reading C++ file 'certunittest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'certunittest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_CertUnitTest_t {
    QByteArrayData data[22];
    char stringdata0[262];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_CertUnitTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_CertUnitTest_t qt_meta_stringdata_CertUnitTest = {
    {
QT_MOC_LITERAL(0, 0, 12), // "CertUnitTest"
QT_MOC_LITERAL(1, 13, 12), // "initTestCase"
QT_MOC_LITERAL(2, 26, 0), // ""
QT_MOC_LITERAL(3, 27, 16), // "checkSystemStore"
QT_MOC_LITERAL(4, 44, 8), // "nullCert"
QT_MOC_LITERAL(5, 53, 10), // "noSuchFile"
QT_MOC_LITERAL(6, 64, 11), // "CAcertstest"
QT_MOC_LITERAL(7, 76, 14), // "derCAcertstest"
QT_MOC_LITERAL(8, 91, 16), // "qualitysslcatest"
QT_MOC_LITERAL(9, 108, 23), // "checkExpiredClientCerts"
QT_MOC_LITERAL(10, 132, 16), // "checkClientCerts"
QT_MOC_LITERAL(11, 149, 7), // "altName"
QT_MOC_LITERAL(12, 157, 7), // "extXMPP"
QT_MOC_LITERAL(13, 165, 23), // "checkExpiredServerCerts"
QT_MOC_LITERAL(14, 189, 16), // "checkServerCerts"
QT_MOC_LITERAL(15, 206, 10), // "altNames76"
QT_MOC_LITERAL(16, 217, 10), // "sha256cert"
QT_MOC_LITERAL(17, 228, 3), // "crl"
QT_MOC_LITERAL(18, 232, 4), // "crl2"
QT_MOC_LITERAL(19, 237, 3), // "csr"
QT_MOC_LITERAL(20, 241, 4), // "csr2"
QT_MOC_LITERAL(21, 246, 15) // "cleanupTestCase"

    },
    "CertUnitTest\0initTestCase\0\0checkSystemStore\0"
    "nullCert\0noSuchFile\0CAcertstest\0"
    "derCAcertstest\0qualitysslcatest\0"
    "checkExpiredClientCerts\0checkClientCerts\0"
    "altName\0extXMPP\0checkExpiredServerCerts\0"
    "checkServerCerts\0altNames76\0sha256cert\0"
    "crl\0crl2\0csr\0csr2\0cleanupTestCase"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_CertUnitTest[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      20,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  114,    2, 0x08 /* Private */,
       3,    0,  115,    2, 0x08 /* Private */,
       4,    0,  116,    2, 0x08 /* Private */,
       5,    0,  117,    2, 0x08 /* Private */,
       6,    0,  118,    2, 0x08 /* Private */,
       7,    0,  119,    2, 0x08 /* Private */,
       8,    0,  120,    2, 0x08 /* Private */,
       9,    0,  121,    2, 0x08 /* Private */,
      10,    0,  122,    2, 0x08 /* Private */,
      11,    0,  123,    2, 0x08 /* Private */,
      12,    0,  124,    2, 0x08 /* Private */,
      13,    0,  125,    2, 0x08 /* Private */,
      14,    0,  126,    2, 0x08 /* Private */,
      15,    0,  127,    2, 0x08 /* Private */,
      16,    0,  128,    2, 0x08 /* Private */,
      17,    0,  129,    2, 0x08 /* Private */,
      18,    0,  130,    2, 0x08 /* Private */,
      19,    0,  131,    2, 0x08 /* Private */,
      20,    0,  132,    2, 0x08 /* Private */,
      21,    0,  133,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void CertUnitTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<CertUnitTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->checkSystemStore(); break;
        case 2: _t->nullCert(); break;
        case 3: _t->noSuchFile(); break;
        case 4: _t->CAcertstest(); break;
        case 5: _t->derCAcertstest(); break;
        case 6: _t->qualitysslcatest(); break;
        case 7: _t->checkExpiredClientCerts(); break;
        case 8: _t->checkClientCerts(); break;
        case 9: _t->altName(); break;
        case 10: _t->extXMPP(); break;
        case 11: _t->checkExpiredServerCerts(); break;
        case 12: _t->checkServerCerts(); break;
        case 13: _t->altNames76(); break;
        case 14: _t->sha256cert(); break;
        case 15: _t->crl(); break;
        case 16: _t->crl2(); break;
        case 17: _t->csr(); break;
        case 18: _t->csr2(); break;
        case 19: _t->cleanupTestCase(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

QT_INIT_METAOBJECT const QMetaObject CertUnitTest::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_CertUnitTest.data,
    qt_meta_data_CertUnitTest,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *CertUnitTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *CertUnitTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CertUnitTest.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int CertUnitTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 20)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 20;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 20)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 20;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
