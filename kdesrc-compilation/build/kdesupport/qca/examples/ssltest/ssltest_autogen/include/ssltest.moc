/****************************************************************************
** Meta object code from reading C++ file 'ssltest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'ssltest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_SecureTest_t {
    QByteArrayData data[15];
    char stringdata0[208];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SecureTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SecureTest_t qt_meta_stringdata_SecureTest = {
    {
QT_MOC_LITERAL(0, 0, 10), // "SecureTest"
QT_MOC_LITERAL(1, 11, 4), // "quit"
QT_MOC_LITERAL(2, 16, 0), // ""
QT_MOC_LITERAL(3, 17, 14), // "sock_connected"
QT_MOC_LITERAL(4, 32, 14), // "sock_readyRead"
QT_MOC_LITERAL(5, 47, 21), // "sock_connectionClosed"
QT_MOC_LITERAL(6, 69, 10), // "sock_error"
QT_MOC_LITERAL(7, 80, 28), // "QAbstractSocket::SocketError"
QT_MOC_LITERAL(8, 109, 1), // "x"
QT_MOC_LITERAL(9, 111, 14), // "ssl_handshaken"
QT_MOC_LITERAL(10, 126, 24), // "ssl_certificateRequested"
QT_MOC_LITERAL(11, 151, 13), // "ssl_readyRead"
QT_MOC_LITERAL(12, 165, 21), // "ssl_readyReadOutgoing"
QT_MOC_LITERAL(13, 187, 10), // "ssl_closed"
QT_MOC_LITERAL(14, 198, 9) // "ssl_error"

    },
    "SecureTest\0quit\0\0sock_connected\0"
    "sock_readyRead\0sock_connectionClosed\0"
    "sock_error\0QAbstractSocket::SocketError\0"
    "x\0ssl_handshaken\0ssl_certificateRequested\0"
    "ssl_readyRead\0ssl_readyReadOutgoing\0"
    "ssl_closed\0ssl_error"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SecureTest[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      11,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   69,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       3,    0,   70,    2, 0x08 /* Private */,
       4,    0,   71,    2, 0x08 /* Private */,
       5,    0,   72,    2, 0x08 /* Private */,
       6,    1,   73,    2, 0x08 /* Private */,
       9,    0,   76,    2, 0x08 /* Private */,
      10,    0,   77,    2, 0x08 /* Private */,
      11,    0,   78,    2, 0x08 /* Private */,
      12,    0,   79,    2, 0x08 /* Private */,
      13,    0,   80,    2, 0x08 /* Private */,
      14,    0,   81,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 7,    8,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void SecureTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<SecureTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->quit(); break;
        case 1: _t->sock_connected(); break;
        case 2: _t->sock_readyRead(); break;
        case 3: _t->sock_connectionClosed(); break;
        case 4: _t->sock_error((*reinterpret_cast< QAbstractSocket::SocketError(*)>(_a[1]))); break;
        case 5: _t->ssl_handshaken(); break;
        case 6: _t->ssl_certificateRequested(); break;
        case 7: _t->ssl_readyRead(); break;
        case 8: _t->ssl_readyReadOutgoing(); break;
        case 9: _t->ssl_closed(); break;
        case 10: _t->ssl_error(); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 4:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QAbstractSocket::SocketError >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (SecureTest::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SecureTest::quit)) {
                *result = 0;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject SecureTest::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_SecureTest.data,
    qt_meta_data_SecureTest,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *SecureTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SecureTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_SecureTest.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int SecureTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    }
    return _id;
}

// SIGNAL 0
void SecureTest::quit()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
