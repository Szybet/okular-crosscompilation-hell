/****************************************************************************
** Meta object code from reading C++ file 'editannotationcontentstest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.9)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'editannotationcontentstest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.9. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_EditAnnotationContentsTest_t {
    QByteArrayData data[15];
    char stringdata0[395];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_EditAnnotationContentsTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_EditAnnotationContentsTest_t qt_meta_stringdata_EditAnnotationContentsTest = {
    {
QT_MOC_LITERAL(0, 0, 26), // "EditAnnotationContentsTest"
QT_MOC_LITERAL(1, 27, 12), // "initTestCase"
QT_MOC_LITERAL(2, 40, 0), // ""
QT_MOC_LITERAL(3, 41, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 57, 4), // "init"
QT_MOC_LITERAL(5, 62, 7), // "cleanup"
QT_MOC_LITERAL(6, 70, 35), // "testConsecutiveCharBackspaces..."
QT_MOC_LITERAL(7, 106, 41), // "testConsecutiveNewlineBackspa..."
QT_MOC_LITERAL(8, 148, 35), // "testConsecutiveCharInsertions..."
QT_MOC_LITERAL(9, 184, 41), // "testConsecutiveNewlineInserti..."
QT_MOC_LITERAL(10, 226, 32), // "testConsecutiveCharDeletesMerged"
QT_MOC_LITERAL(11, 259, 38), // "testConsecutiveNewlineDeletes..."
QT_MOC_LITERAL(12, 298, 55), // "testConsecutiveEditsNotMerged..."
QT_MOC_LITERAL(13, 354, 23), // "testInsertWithSelection"
QT_MOC_LITERAL(14, 378, 16) // "testCombinations"

    },
    "EditAnnotationContentsTest\0initTestCase\0"
    "\0cleanupTestCase\0init\0cleanup\0"
    "testConsecutiveCharBackspacesMerged\0"
    "testConsecutiveNewlineBackspacesNotMerged\0"
    "testConsecutiveCharInsertionsMerged\0"
    "testConsecutiveNewlineInsertionsNotMerged\0"
    "testConsecutiveCharDeletesMerged\0"
    "testConsecutiveNewlineDeletesNotMerged\0"
    "testConsecutiveEditsNotMergedAcrossDifferentAnnotations\0"
    "testInsertWithSelection\0testCombinations"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_EditAnnotationContentsTest[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      13,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   79,    2, 0x08 /* Private */,
       3,    0,   80,    2, 0x08 /* Private */,
       4,    0,   81,    2, 0x08 /* Private */,
       5,    0,   82,    2, 0x08 /* Private */,
       6,    0,   83,    2, 0x08 /* Private */,
       7,    0,   84,    2, 0x08 /* Private */,
       8,    0,   85,    2, 0x08 /* Private */,
       9,    0,   86,    2, 0x08 /* Private */,
      10,    0,   87,    2, 0x08 /* Private */,
      11,    0,   88,    2, 0x08 /* Private */,
      12,    0,   89,    2, 0x08 /* Private */,
      13,    0,   90,    2, 0x08 /* Private */,
      14,    0,   91,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void EditAnnotationContentsTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<EditAnnotationContentsTest *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->init(); break;
        case 3: _t->cleanup(); break;
        case 4: _t->testConsecutiveCharBackspacesMerged(); break;
        case 5: _t->testConsecutiveNewlineBackspacesNotMerged(); break;
        case 6: _t->testConsecutiveCharInsertionsMerged(); break;
        case 7: _t->testConsecutiveNewlineInsertionsNotMerged(); break;
        case 8: _t->testConsecutiveCharDeletesMerged(); break;
        case 9: _t->testConsecutiveNewlineDeletesNotMerged(); break;
        case 10: _t->testConsecutiveEditsNotMergedAcrossDifferentAnnotations(); break;
        case 11: _t->testInsertWithSelection(); break;
        case 12: _t->testCombinations(); break;
        default: ;
        }
    }
    (void)_a;
}

QT_INIT_METAOBJECT const QMetaObject EditAnnotationContentsTest::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_EditAnnotationContentsTest.data,
    qt_meta_data_EditAnnotationContentsTest,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *EditAnnotationContentsTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *EditAnnotationContentsTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_EditAnnotationContentsTest.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int EditAnnotationContentsTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 13)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 13;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 13)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 13;
    }
    return _id;
}
struct qt_meta_stringdata_MockEditor_t {
    QByteArrayData data[8];
    char stringdata0[112];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_MockEditor_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_MockEditor_t qt_meta_stringdata_MockEditor = {
    {
QT_MOC_LITERAL(0, 0, 10), // "MockEditor"
QT_MOC_LITERAL(1, 11, 39), // "slotAnnotationContentsChanged..."
QT_MOC_LITERAL(2, 51, 0), // ""
QT_MOC_LITERAL(3, 52, 19), // "Okular::Annotation*"
QT_MOC_LITERAL(4, 72, 10), // "annotation"
QT_MOC_LITERAL(5, 83, 8), // "contents"
QT_MOC_LITERAL(6, 92, 9), // "cursorPos"
QT_MOC_LITERAL(7, 102, 9) // "anchorPos"

    },
    "MockEditor\0slotAnnotationContentsChangedByUndoRedo\0"
    "\0Okular::Annotation*\0annotation\0"
    "contents\0cursorPos\0anchorPos"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_MockEditor[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    4,   19,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void, 0x80000000 | 3, QMetaType::QString, QMetaType::Int, QMetaType::Int,    4,    5,    6,    7,

       0        // eod
};

void MockEditor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<MockEditor *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->slotAnnotationContentsChangedByUndoRedo((*reinterpret_cast< Okular::Annotation*(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< int(*)>(_a[3])),(*reinterpret_cast< int(*)>(_a[4]))); break;
        default: ;
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject MockEditor::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_MockEditor.data,
    qt_meta_data_MockEditor,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *MockEditor::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MockEditor::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_MockEditor.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int MockEditor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
