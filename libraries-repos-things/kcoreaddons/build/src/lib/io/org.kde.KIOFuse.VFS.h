/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -m -p io/org.kde.KIOFuse.VFS /mnt/HDD/Project/Public/okulartry/kcoreaddons/src/lib/io/org.kde.KIOFuse.VFS.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef ORG_KDE_KIOFUSE_VFS_H
#define ORG_KDE_KIOFUSE_VFS_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.KIOFuse.VFS
 */
class OrgKdeKIOFuseVFSInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.KIOFuse.VFS"; }

public:
    OrgKdeKIOFuseVFSInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgKdeKIOFuseVFSInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> mountUrl(const QString &remoteUrl)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(remoteUrl);
        return asyncCallWithArgumentList(QStringLiteral("mountUrl"), argumentList);
    }

    inline QDBusPendingReply<QString> remoteUrl(const QString &localPath)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(localPath);
        return asyncCallWithArgumentList(QStringLiteral("remoteUrl"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

#endif
