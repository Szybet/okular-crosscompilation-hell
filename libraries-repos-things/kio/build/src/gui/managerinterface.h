/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -i systemd/dbustypes.h -p managerinterface /mnt/HDD/Project/Public/okulartry/kio/src/gui/systemd/org.freedesktop.systemd1.Manager.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MANAGERINTERFACE_H
#define MANAGERINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "systemd/dbustypes.h"

/*
 * Proxy class for interface org.freedesktop.systemd1.Manager
 */
class OrgFreedesktopSystemd1ManagerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.systemd1.Manager"; }

public:
    OrgFreedesktopSystemd1ManagerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgFreedesktopSystemd1ManagerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> StartTransientUnit(const QString &name, const QString &mode, const QVariantMultiMap &properties, TransientAuxList aux)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(name) << QVariant::fromValue(mode) << QVariant::fromValue(properties) << QVariant::fromValue(aux);
        return asyncCallWithArgumentList(QStringLiteral("StartTransientUnit"), argumentList);
    }

    inline QDBusPendingReply<> Subscribe()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("Subscribe"), argumentList);
    }

    inline QDBusPendingReply<> Unsubscribe()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("Unsubscribe"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void JobRemoved(uint id, const QDBusObjectPath &job, const QString &unit, const QString &result);
    void UnitNew(const QString &name, const QDBusObjectPath &path);
};

namespace org {
  namespace freedesktop {
    namespace systemd1 {
      typedef ::OrgFreedesktopSystemd1ManagerInterface Manager;
    }
  }
}
#endif
