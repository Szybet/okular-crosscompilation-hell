/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a kpasswdserveradaptor -i kpasswdserver.h -l KPasswdServer /mnt/HDD/Project/Public/okulartry/kio/src/core/org.kde.KPasswdServer.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef KPASSWDSERVERADAPTOR_H
#define KPASSWDSERVERADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "kpasswdserver.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.kde.KPasswdServer
 */
class KPasswdServerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.KPasswdServer")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.KPasswdServer\">\n"
"    <signal name=\"checkAuthInfoAsyncResult\">\n"
"      <arg type=\"x\" name=\"requestId\"/>\n"
"      <arg type=\"x\" name=\"seqNr\"/>\n"
"      <arg type=\"(ysssssssssbbbba{s(siv)})\" name=\"info\"/>\n"
"      <annotation value=\"KIO::AuthInfo\" name=\"org.qtproject.QtDBus.QtTypeName.Out2\"/>\n"
"    </signal>\n"
"    <signal name=\"queryAuthInfoAsyncResult\">\n"
"      <arg type=\"x\" name=\"requestId\"/>\n"
"      <arg type=\"x\" name=\"seqNr\"/>\n"
"      <arg type=\"(ysssssssssbbbba{s(siv)})\" name=\"info\"/>\n"
"      <annotation value=\"KIO::AuthInfo\" name=\"org.qtproject.QtDBus.QtTypeName.Out2\"/>\n"
"    </signal>\n"
"    <method name=\"checkAuthInfo\">\n"
"      <arg direction=\"out\" type=\"ay\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"data\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"windowId\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"usertime\"/>\n"
"    </method>\n"
"    <method name=\"queryAuthInfo\">\n"
"      <arg direction=\"out\" type=\"ay\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"data\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"errorMsg\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"windowId\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"seqNr\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"usertime\"/>\n"
"    </method>\n"
"    <method name=\"checkAuthInfoAsync\">\n"
"      <arg direction=\"out\" type=\"x\"/>\n"
"      <arg direction=\"in\" type=\"(ysssssssssbbbba{s(siv)})\" name=\"info\"/>\n"
"      <annotation value=\"KIO::AuthInfo\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"windowId\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"usertime\"/>\n"
"    </method>\n"
"    <method name=\"queryAuthInfoAsync\">\n"
"      <arg direction=\"out\" type=\"x\"/>\n"
"      <arg direction=\"in\" type=\"(ysssssssssbbbba{s(siv)})\" name=\"info\"/>\n"
"      <annotation value=\"KIO::AuthInfo\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"errorMsg\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"windowId\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"seqNr\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"usertime\"/>\n"
"    </method>\n"
"    <method name=\"addAuthInfo\">\n"
"      <arg direction=\"in\" type=\"ay\" name=\"data\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"windowId\"/>\n"
"    </method>\n"
"    <method name=\"addAuthInfo\">\n"
"      <arg direction=\"in\" type=\"(ysssssssssbbbba{s(siv)})\" name=\"info\"/>\n"
"      <annotation value=\"KIO::AuthInfo\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"in\" type=\"x\" name=\"windowId\"/>\n"
"    </method>\n"
"    <method name=\"removeAuthInfo\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"host\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"protocol\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"user\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    KPasswdServerAdaptor(KPasswdServer *parent);
    virtual ~KPasswdServerAdaptor();

    inline KPasswdServer *parent() const
    { return static_cast<KPasswdServer *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void addAuthInfo(KIO::AuthInfo info, qlonglong windowId);
    void addAuthInfo(const QByteArray &data, qlonglong windowId);
    QByteArray checkAuthInfo(const QByteArray &data, qlonglong windowId, qlonglong usertime);
    qlonglong checkAuthInfoAsync(KIO::AuthInfo info, qlonglong windowId, qlonglong usertime);
    QByteArray queryAuthInfo(const QByteArray &data, const QString &errorMsg, qlonglong windowId, qlonglong seqNr, qlonglong usertime);
    qlonglong queryAuthInfoAsync(KIO::AuthInfo info, const QString &errorMsg, qlonglong windowId, qlonglong seqNr, qlonglong usertime);
    void removeAuthInfo(const QString &host, const QString &protocol, const QString &user);
Q_SIGNALS: // SIGNALS
    void checkAuthInfoAsyncResult(qlonglong requestId, qlonglong seqNr, KIO::AuthInfo info);
    void queryAuthInfoAsyncResult(qlonglong requestId, qlonglong seqNr, KIO::AuthInfo info);
};

#endif
